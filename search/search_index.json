{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-mkdocs","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs gh-deploy</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"This is a test page","text":"<p>Testing is very important to do before making big decisions</p>  graph TD     A[Start] --&gt; B{Is it working?}     B -- Yes --&gt; C[Great!]     B -- No --&gt; D[Debug]     D --&gt; B"},{"location":"access_excel/","title":"Connect to Finance Model","text":"<ol> <li>Open Excel</li> <li>Go to Data</li> <li>Get Data</li> <li>From Power Platform</li> <li>From Power BI. </li> <li>Then on the right hand side you'll see all the models you can connect to. Click 'Insert PivotTable'</li> </ol> <p>The pane on the right will be replaced with different fields that can be added to the Filters, Columns, Rows, and Values. Add what you want to each field. </p> <p>When you're ready to convert to CUBE formulas, go to:</p> <ol> <li>PivotTable Analyze</li> <li>OLAP Tools</li> <li>Convert to Formulas</li> </ol> <p></p> <p>After a few seconds you should be able to move the formulas around to build your spreadsheet out.</p>"},{"location":"diagrams/","title":"Use Mermaid Charts","text":"<p>Mermaid is a JavaScript library that allows for building diagrams as code. </p> <p>Mermaid official docs: https://mermaid.js.org/intro/</p>"},{"location":"diagrams/#version-1","title":"Version 1","text":"<p>Version 1 limits you to an older version of Mermaid.</p> <p><code>pip install mkdocs-mermaid2-plugin</code></p> <p>Update config:</p> <pre><code>plugins:\n  - search\n  - mermaid2\n</code></pre> <p>Write your mermaid markdown</p> <pre><code># Mermaid Example\n\n```mermaid\ngraph TD\n    A[Start] --&gt; B{Is it working?}\n    B -- Yes --&gt; C[Great!]\n    B -- No --&gt; D[Debug]\n    D --&gt; B\n</code></pre> <p>Version 1 limits you to a certain version of Mermaid. This means you can't use the  new shapes introduced in version 11.3.0+ https://mermaid.js.org/syntax/flowchart.html#expanded-node-shapes-in-mermaid-flowcharts-v11-3-0</p>"},{"location":"diagrams/#version-2","title":"Version 2","text":"<p>Version 2 gives more control but requires syntax in html tags.</p> <p>Update config:</p> <pre><code>extra_javascript:\n  - https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\n</code></pre> <p>Add the import into index.md</p> <pre><code>&lt;script&gt;\n  mermaid.initialize({ startOnLoad: true });\n&lt;/script&gt;\n</code></pre> <p>Write your mermaid</p> <pre><code>&lt;div class=\"mermaid\"&gt;\ngraph TD\n    A[Start] --&gt; B{Is it working?}\n    B -- Yes --&gt; C[Great!]\n    B -- No --&gt; D[Debug]\n    D --&gt; B\n    Z@{ shape: manual-file, label: \"File Handling\"}\n&lt;/div&gt;\n</code></pre>  graph TD     A[Start] --&gt; B{Is it working?}     B -- Yes --&gt; C[Great!]     B -- No --&gt; D[Debug]     D --&gt; B     C --&gt; Z@{ shape: manual-file, label: \"File Handling\"}     Z --&gt; E@{ shape: manual-input, label: \"User Input\"}     D --&gt; F@{ shape: docs, label: \"Multiple Documents\"}     G@{ shape: procs, label: \"Process Automation\"} --&gt;     H@{ shape: paper-tape, label: \"Paper Records\"}"},{"location":"quickstart/","title":"Getting started with MKDocs","text":"<ol> <li>Create a python project.</li> <li> <p>Create a venv and activate it. </p> <ul> <li>Windows: <code>venv\\Scripts\\activate</code></li> <li>MacOS/Linux: <code>venv/bin/activate</code></li> </ul> </li> <li> <p>Once activated, <code>pip install mkdocs</code></p> </li> <li>Next create the project with <code>mkdocs new .</code> which creates a yml file.</li> </ol> <p>You now have your project setup. You can create and edit markdown files  in the <code>/docs</code> directory.</p>"},{"location":"quickstart/#commands","title":"Commands","text":"<p><code>mkdocs serve</code> - generate hot reloading docs to access and view</p> <p><code>mkdocs build</code> - generate the files in a directory called <code>/site</code></p> <p>To add configuration and navigation, edit the <code>mkdocs.yml</code> file. </p> <p>The only required field in this is <code>site_name</code>.</p> <p>Add nav:</p> <pre><code>site_name: Test Docs\nnav:\n  - Home: index.md\n  - About: about.md\n</code></pre>"},{"location":"quickstart/#deploy","title":"Deploy","text":"<p>If you're connected to GitHub, you can build and deploy into a separate branch with one command <code>mkdocs gh-deploy</code>. This will build and load the docs to a separate branch in the repo, which can then be setup in GitHub pages to build on every push.</p>"},{"location":"quickstart/#writing-docs","title":"Writing Docs","text":""},{"location":"quickstart/#tables","title":"Tables","text":"<p>You can write markdown or html tags into each page.</p> <p>This header <code># Header</code> is the same as <code>&lt;h1&gt;Header&lt;/h1&gt;</code></p> <p>You can do tables like this:</p> <pre><code>| Column 1 | Column 2 | Column 3 |\n|----------|----------|----------|\n| Value 1  | Value 2  | Value 3  |\n</code></pre> Column 1 Column 2 Column 3 Value 1 Value 2 Value 3 <p>or like this</p> <pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Column 1&lt;/td&gt;\n        &lt;td&gt;Column 2&lt;/td&gt;\n        &lt;td&gt;Column 3&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Value 1&lt;/td&gt;\n        &lt;td&gt;Value 2&lt;/td&gt;\n        &lt;td&gt;Value 3&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre> Column 1 Column 2 Column 3 Value 1 Value 2 Value 3 <p>HTML is nice because you can add custom styling both inline, and through stylesheets.</p> <p>In <code>mkdocs.yml</code> add</p> <pre><code>extra_css:\n  - css/main.css\n</code></pre> <p>Then create a directory inside of <code>/docs</code> you can call it anything but we'll call it <code>css</code>. Create a stylesheet called <code>main.css</code>.</p> <pre><code>.bold-rows thead tr td {\n    font-weight: bold;\n    padding: 2px 10px;\n}\n\n.center-table-vals td {\n    align-content: center;\n    text-align: center;\n}\n</code></pre> <p>Then you can use the CSS tags in the HTML elements.</p> <pre><code>&lt;table class=\"bold-rows center-table-vals\" style=\"background-color: aqua\"&gt;\n        &lt;thead&gt;\n            &lt;tr&gt;\n                &lt;td&gt;Column 1&lt;/td&gt;\n                &lt;td&gt;Column 2&lt;/td&gt;\n                &lt;td&gt;Column 3&lt;/td&gt;\n            &lt;/tr&gt;\n        &lt;/thead&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Value 1&lt;/td&gt;\n        &lt;td&gt;Value 2&lt;/td&gt;\n        &lt;td&gt;Value 3&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre> Column 1 Column 2 Column 3 Value 1 Value 2 Value 3"},{"location":"quickstart/#images","title":"Images","text":"<p>Add images by using this syntax <code>![Text to describe image](./path/to/file.png)</code></p> <p>For example: <code>![Excel Access](./images/Excel Access.png)</code></p>"},{"location":"quickstart/#spacing","title":"Spacing","text":"<p>You can use HTML to add custom spacing in the docs:</p> <pre><code>&lt;div style=\"height: 20px\"&gt;&lt;/div&gt;\n&lt;hr&gt;\n</code></pre>"},{"location":"quickstart/#generate-a-pdf","title":"Generate a PDF","text":""},{"location":"quickstart/#version-1","title":"Version 1","text":"<p>Print to PDF from web app. Does a pretty good job with formatting.</p>"},{"location":"quickstart/#version-2","title":"Version 2","text":"<p>UNTESTED</p> <p>Install the Plugin: <code>pip install mkdocs-pdf-export-plugin</code></p> <p>Modify mkdocs.yml: Add the plugin to your MkDocs configuration file:</p> <pre><code>plugins:\n  - pdf-export\n</code></pre> <p>If you're using other plugins, ensure you list them as well.</p> <p>Build the PDF: Run the following command to build the documentation and export the PDF:</p> <p><code>mkdocs build</code></p> <p>The PDF will be generated and placed in the site/pdf/ directory.</p>"}]}